// Copyright 2021 Contributors to the Veraison project.
// SPDX-License-Identifier: Apache-2.0

package main

import (
	"io/ioutil"
	"testing"

	"github.com/stretchr/testify/assert"
)

var FWID = []uint8{
	0x6e, 0x34, 0x0b, 0x9c, 0xff, 0xb3, 0x7a, 0x98, 0x9c, 0xa5, 0x44,
	0xe6, 0xbb, 0x78, 0x0a, 0x2c, 0x78, 0x90, 0x1d, 0x3f, 0xb3, 0x37,
	0x38, 0x76, 0x85, 0x11, 0xa3, 0x06, 0x17, 0xaf, 0xa0, 0x1d,
}

var DeviceID = []uint8{
	0x04, 0x9f, 0x34, 0x66, 0x25, 0x8b, 0x71, 0x06, 0x23, 0x7f, 0xeb,
	0x64, 0x8d, 0xdf, 0xd5, 0x56, 0xb8, 0xb9, 0x38, 0xc3, 0x07, 0x6a,
	0x61, 0x89, 0x40, 0x97, 0x5f, 0x20, 0x98, 0x9d, 0x61, 0xf3, 0x79,
	0x9d, 0x04, 0x82, 0xf4, 0x6c, 0x8c, 0x4a, 0x94, 0xba, 0x5e, 0x00,
	0x3d, 0xda, 0x66, 0x8f, 0x58, 0xc2, 0x90, 0xca, 0x6f, 0x63, 0xda,
	0xe5, 0xcd, 0x5a, 0x5a, 0x54, 0xcc, 0x0c, 0x07, 0x2f, 0xae,
}

func TestExractEvidence(t *testing.T) {
	assert := assert.New(t)

	deviceData, err := ioutil.ReadFile("test/DeviceCerts.pem")
	if err != nil {
		t.Fatalf("Could not lead device certs file.")
	}

	taData, err := ioutil.ReadFile("test/TrustAnchor.pem")
	if err != nil {
		t.Fatalf("Could not read trust anchor file.")
	}

	ee := new(EvidenceExtractor)

	evidence, err := ee.ExtractEvidence(deviceData, taData)
	assert.Nil(err)
	assert.Equal(FWID, evidence["FWID"])
	assert.Equal(DeviceID, evidence["DeviceID"])
}
