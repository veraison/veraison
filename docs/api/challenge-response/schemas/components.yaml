components:
  schemas:
    ChallengeResponseSession:
      required:
        - nonce
        - expiry
        - accept
      properties:
        nonce:
          type: string
          format: byte
          description:
            base64 encoded 32, 48, or 64 bytes random value
          example: MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTI=
        expiry:
          type: string
          format: date-time
          description: >
            time (UTC ISO 8601 timestamp) at which the resource associated with
            the challenge-response session expires and may no longer exist. The
            client MUST assume that the challenge-response session is
            garbage-collected at the specified time.  This value is updated again
            at the transition between the "waiting" and "processing" states.
        accept:
          type: array
          items:
            $ref: '#/components/schemas/EvidenceContentType'
            description: >
              Acceptable MIME types for attestation Evidence submission
        status:
          type: string
          enum:
            - waiting
            - processing
            - complete
            - failed
          description: >
            A new challenge-response session starts in "waiting" state.  It
            moves to state "processing" after Evidence has been successfully
            submitted, and to "complete" after the Attestation Result has been
            computed.  If an unrecoverable internal processing error is
            encountered, the state moves to "failed".
        evidence:
          $ref: '#/components/schemas/EvidenceBlob'
          description: >
            the submitted attestation Evidence
        result:
          $ref: '#/components/schemas/AttestationResult'
          description: >
            the computed Attestation Result

    EvidenceContentType:
      type: string
      example: 'application/psa-attestation-token'

    EvidenceBytes:
      type: string
      example: 'eyJhbGciO...RfrKmTWk'
      description: >
        Base64 encoded Evidence

    EvidenceBlob:
      required:
        - type
        - value
      properties:
        type:
          $ref: '#/components/schemas/EvidenceContentType'
          description: >
            MIME type associated with the Evidence
        value:
          $ref: '#/components/schemas/EvidenceBytes'

    AttestationResult:
      required:
        - status
        - timestamp
      properties:
        status:
          $ref: "#/components/schemas/AttestationResultStatusValue"
          description: >
            Overall validation result
        trust-vector:
          $ref: "#/components/schemas/AttestationResultTrustVector"
          description: >
            A vector of status values characterising specific aspects of
            attested evidence.
        raw-evidence:
          type: string
          format: byte
          description:
            base64 encoded 32, 48, or 64 bytes evidence token as received by the verifier.
        timestamp:
          type: string
          format: date-time
          description: >
            time (UTC ISO 8601 timestamp) at which the attestation result was
            created.
        endorsed-claims:
          $ref: "#/components/schemas/AttestationResultEndorsedClaims"
          description: >
            Claims endorsed by the verifier based on the evidence extracted
            from the evidence and available endorsements.
        appraisal-policy-id:
          type: string
          description: >
            An identifier of the policy that was used by the verifier to
            evaluate the evidence and produce the attestation result.
        veraison-processed-evidence:
          type: object
          description: >
            Claims extracted from raw evidence.

    AttestationResultTrustVector:
      properties:
        hw-authenticity:
          $ref: "#/components/schemas/AttestationResultStatusValue"
        sw-integrity:
          $ref: "#/components/schemas/AttestationResultStatusValue"
        sw-up-to-dateness:
          $ref: "#/components/schemas/AttestationResultStatusValue"
        config-integrity:
          $ref: "#/components/schemas/AttestationResultStatusValue"
        runtime-integrity:
          $ref: "#/components/schemas/AttestationResultStatusValue"
        certification-status:
          $ref: "#/components/schemas/AttestationResultStatusValue"

    AttestationResultStatusValue:
      type: string
      enum: [failure, success, unknown]

    AttestationResultEndorsedClaims:
      properties:
        hw-details:
          type: object
        sw-details:
          type: object
        certification-details:
          type: object
        configdetails:
          type: object

    Problem:
      required:
        - title
      properties:
        type:
          type: string
          description: >
            A URI reference [RFC3986] that identifies the problem type.  This
            specification encourages that, when dereferenced, it provide
            human-readable documentation for the problem type (e.g., using HTML
            [W3C.REC-html5-20141028]).  When this member is not present, its
            value is assumed to be "about:blank".
          example: about:blank
        title:
          type: string
          description: >
            A short, human-readable summary of the problem type.  It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization (e.g., using proactive content
            negotiation; see [RFC7231], Section 3.4).
          example: Not Found
        status:
          type: integer
          description: >
            The HTTP status code ([RFC7231], Section 6) generated by the
            origin server for this occurrence of the problem.
          example: 404
        detail:
          type: string
          description: >
            A human-readable explanation specific to this occurrence
            of the problem.
          example: no active session could be located at the requested URL
        instance:
          type: string
          format: uri
          description: >
            A URI reference that identifies the specific occurrence of
            the problem.  It may or may not yield further information if
            dereferenced.
          example: https://veraison.example/v1/problems/404

  responses:
    Error:
      description: >
        Unexpected error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

# vim: set tw=79 sts=2 sw=2 et:
